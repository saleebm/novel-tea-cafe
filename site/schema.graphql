# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
}

"Node Interface"
interface Node {
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

"A Sanity document"
interface SanityDocument {
  _createdAt: Date
  _id: String
  _rev: String
  _type: String
  _updatedAt: Date
}

union SanityAuthorReferenceOrMathOrSpan = SanityAuthorReference | SanityMath | SanitySpan

union SanityBlockOrInstagramOrMainImageOrMathOrVideoEmbed = SanityBlock | SanityInstagram | SanityMainImage | SanityMath | SanityVideoEmbed

type Directory implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type DirectoryConnection {
  distinct(field: DirectoryFieldsEnum!): [String!]!
  edges: [DirectoryEdge!]!
  group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

type DirectoryGroupConnection {
  edges: [DirectoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [Directory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type File implements Node {
  absolutePath: String!
  accessTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  atimeMs: Float!
  base: String!
  birthTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason : "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  changeTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  childImageSharp: ImageSharp
  children: [Node!]!
  ctime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  ctimeMs: Float!
  dev: Int!
  dir: String!
  ext: String!
  extension: String!
  gid: Int!
  hash: String
  id: ID!
  ino: Float!
  internal: Internal!
  mode: Int!
  modifiedTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date!
  mtimeMs: Float!
  name: String!
  nlink: Int!
  parent: Node
  prettySize: String!
  "Copy file to static directory and return public url to it"
  publicURL: String
  rdev: Int!
  relativeDirectory: String!
  relativePath: String!
  root: String!
  size: Int!
  sourceInstanceName: String!
  uid: Int!
}

type FileConnection {
  distinct(field: FileFieldsEnum!): [String!]!
  edges: [FileEdge!]!
  group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

type FileGroupConnection {
  edges: [FileEdge!]!
  field: String!
  fieldValue: String
  nodes: [File!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharp implements Node {
  children: [Node!]!
  fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
  fluid(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = NO_CHANGE,
    toFormatBase64: ImageFormat = NO_CHANGE,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpFluid
  id: ID!
  internal: Internal!
  original: ImageSharpOriginal
  parent: Node
  resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
  resolutions(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = NO_CHANGE, toFormatBase64: ImageFormat = NO_CHANGE, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResolutions @deprecated(reason : "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
  sizes(
    background: String = "rgba(0,0,0,1)",
    base64Width: Int,
    cropFocus: ImageCropFocus = ATTENTION,
    duotone: DuotoneGradient,
    fit: ImageFit = COVER,
    grayscale: Boolean = false,
    jpegProgressive: Boolean = true,
    jpegQuality: Int,
    maxHeight: Int,
    maxWidth: Int,
    pngCompressionSpeed: Int = 4,
    pngQuality: Int,
    quality: Int,
    rotate: Int = 0,
    sizes: String = "",
    "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
    srcSetBreakpoints: [Int] = [],
    toFormat: ImageFormat = NO_CHANGE,
    toFormatBase64: ImageFormat = NO_CHANGE,
    traceSVG: Potrace,
    trim: Float = 0.0,
    webpQuality: Int
  ): ImageSharpSizes @deprecated(reason : "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
}

type ImageSharpConnection {
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  edges: [ImageSharpEdge!]!
  group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

type ImageSharpFixed {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpFluid {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type ImageSharpGroupConnection {
  edges: [ImageSharpEdge!]!
  field: String!
  fieldValue: String
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type ImageSharpOriginal {
  height: Float
  src: String
  width: Float
}

type ImageSharpResize {
  aspectRatio: Float
  height: Int
  originalName: String
  src: String
  tracedSVG: String
  width: Int
}

type ImageSharpResolutions {
  aspectRatio: Float
  base64: String
  height: Float!
  originalName: String
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
  width: Float!
}

type ImageSharpSizes {
  aspectRatio: Float!
  base64: String
  originalImg: String
  originalName: String
  presentationHeight: Int!
  presentationWidth: Int!
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  tracedSVG: String
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

type PageInfo {
  currentPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

type Query {
  allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
  allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
  allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
  allSanityAuthor(filter: SanityAuthorFilterInput, limit: Int, skip: Int, sort: SanityAuthorSortInput): SanityAuthorConnection!
  allSanityCategory(filter: SanityCategoryFilterInput, limit: Int, skip: Int, sort: SanityCategorySortInput): SanityCategoryConnection!
  allSanityFileAsset(filter: SanityFileAssetFilterInput, limit: Int, skip: Int, sort: SanityFileAssetSortInput): SanityFileAssetConnection!
  allSanityImageAsset(filter: SanityImageAssetFilterInput, limit: Int, skip: Int, sort: SanityImageAssetSortInput): SanityImageAssetConnection!
  allSanityMenuItem(filter: SanityMenuItemFilterInput, limit: Int, skip: Int, sort: SanityMenuItemSortInput): SanityMenuItemConnection!
  allSanityMenuItemCategory(filter: SanityMenuItemCategoryFilterInput, limit: Int, skip: Int, sort: SanityMenuItemCategorySortInput): SanityMenuItemCategoryConnection!
  allSanityPage(filter: SanityPageFilterInput, limit: Int, skip: Int, sort: SanityPageSortInput): SanityPageConnection!
  allSanityPost(filter: SanityPostFilterInput, limit: Int, skip: Int, sort: SanityPostSortInput): SanityPostConnection!
  allSanitySiteSettings(filter: SanitySiteSettingsFilterInput, limit: Int, skip: Int, sort: SanitySiteSettingsSortInput): SanitySiteSettingsConnection!
  allSanityWeeklyEvents(filter: SanityWeeklyEventsFilterInput, limit: Int, skip: Int, sort: SanityWeeklyEventsSortInput): SanityWeeklyEventsConnection!
  allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
  allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
  allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
  allStaticMap(filter: StaticMapFilterInput, limit: Int, skip: Int, sort: StaticMapSortInput): StaticMapConnection!
  directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
  file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, hash: StringQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
  imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput, resolutions: ImageSharpResolutionsFilterInput, sizes: ImageSharpSizesFilterInput): ImageSharp
  sanityAuthor(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawBio: JSONQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rawSlug: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, bio: SanityBlockFilterListInput, children: NodeFilterListInput, id: StringQueryOperatorInput, image: SanityMainImageFilterInput, internal: InternalFilterInput, name: StringQueryOperatorInput, parent: NodeFilterInput, slug: SanitySlugFilterInput): SanityAuthor
  sanityCategory(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, title: StringQueryOperatorInput): SanityCategory
  sanityFileAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityFileAsset
  sanityImageAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawMetadata: JSONQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, assetId: StringQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, fixed: SanityImageFixedFilterInput, fluid: SanityImageFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, metadata: SanityImageMetadataFilterInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityImageAsset
  sanityMenuItem(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rawMenuItemCategory: JSONQueryOperatorInput, _rawMenuItemPriceOption: JSONQueryOperatorInput, _rawSlug: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, image: SanityImageFilterInput, internal: InternalFilterInput, menuItemCategory: SanityMenuItemCategoryFilterListInput, menuItemPriceOption: SanityMenuItemPriceOptionFilterListInput, name: StringQueryOperatorInput, parent: NodeFilterInput, slug: SanitySlugFilterInput): SanityMenuItem
  sanityMenuItemCategory(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, title: StringQueryOperatorInput): SanityMenuItemCategory
  sanityPage(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawHero: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, hero: SanityHeroFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, title: StringQueryOperatorInput): SanityPage
  sanityPost(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawAuthors: JSONQueryOperatorInput, _rawBody: JSONQueryOperatorInput, _rawCategories: JSONQueryOperatorInput, _rawExcerpt: JSONQueryOperatorInput, _rawMainImage: JSONQueryOperatorInput, _rawSlug: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, authors: SanityAuthorReferenceFilterListInput, body: SanityBlockFilterListInput, categories: SanityCategoryFilterListInput, children: NodeFilterListInput, excerpt: SanityBlockFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, isPublished: BooleanQueryOperatorInput, mainImage: SanityMainImageFilterInput, parent: NodeFilterInput, publishedAt: DateQueryOperatorInput, slug: SanitySlugFilterInput, title: StringQueryOperatorInput): SanityPost
  sanitySiteSettings(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawHappyHour: JSONQueryOperatorInput, _rawOpenGraph: JSONQueryOperatorInput, _rawPrimaryColor: JSONQueryOperatorInput, _rawSecondaryColor: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, address: StringQueryOperatorInput, children: NodeFilterListInput, facebookPage: StringQueryOperatorInput, happyHour: SanityBlockFilterListInput, id: StringQueryOperatorInput, instagramPage: StringQueryOperatorInput, internal: InternalFilterInput, openGraph: SanityOpenGraphFilterInput, parent: NodeFilterInput, primaryColor: SanityColorFilterInput, secondaryColor: SanityColorFilterInput, twitterPage: StringQueryOperatorInput): SanitySiteSettings
  sanityWeeklyEvents(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawFriday: JSONQueryOperatorInput, _rawMonday: JSONQueryOperatorInput, _rawSaturday: JSONQueryOperatorInput, _rawSunday: JSONQueryOperatorInput, _rawThursday: JSONQueryOperatorInput, _rawTuesday: JSONQueryOperatorInput, _rawWednesday: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, friday: SanityEventDayFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, monday: SanityEventDayFilterInput, parent: NodeFilterInput, saturday: SanityEventDayFilterInput, sunday: SanityEventDayFilterInput, thursday: SanityEventDayFilterInput, tuesday: SanityEventDayFilterInput, wednesday: SanityEventDayFilterInput): SanityWeeklyEvents
  site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
  siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
  sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
  sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
  staticMap(absolutePath: StringQueryOperatorInput, center: StringQueryOperatorInput, childFile: FileFilterInput, children: NodeFilterListInput, hash: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, mapUrl: StringQueryOperatorInput, nickname: StringQueryOperatorInput, parent: NodeFilterInput): StaticMap
}

type SanityAssetSourceData {
  _key: String
  _type: String
  id: String
  name: String
  url: String
}

type SanityAuthor implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawBio(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSlug(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  bio: [SanityBlock]
  children: [Node!]!
  id: ID!
  image: SanityMainImage
  internal: Internal!
  name: String
  parent: Node
  slug: SanitySlug
}

type SanityAuthorConnection {
  distinct(field: SanityAuthorFieldsEnum!): [String!]!
  edges: [SanityAuthorEdge!]!
  group(field: SanityAuthorFieldsEnum!, limit: Int, skip: Int): [SanityAuthorGroupConnection!]!
  nodes: [SanityAuthor!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityAuthorEdge {
  next: SanityAuthor
  node: SanityAuthor!
  previous: SanityAuthor
}

type SanityAuthorGroupConnection {
  edges: [SanityAuthorEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityAuthor!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityAuthorReference {
  _key: String
  _rawAuthor(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  author: SanityAuthor
}

type SanityBlock {
  _key: String
  _rawChildren(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  children: [SanitySpan]
  list: String
  style: String
}

type SanityCategory implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  description: String
  id: ID!
  internal: Internal!
  parent: Node
  title: String
}

type SanityCategoryConnection {
  distinct(field: SanityCategoryFieldsEnum!): [String!]!
  edges: [SanityCategoryEdge!]!
  group(field: SanityCategoryFieldsEnum!, limit: Int, skip: Int): [SanityCategoryGroupConnection!]!
  nodes: [SanityCategory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityCategoryEdge {
  next: SanityCategory
  node: SanityCategory!
  previous: SanityCategory
}

type SanityCategoryGroupConnection {
  edges: [SanityCategoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityCategory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityCode {
  _key: String
  _type: String
  code: String
  filename: String
  highlightedLines: [Float]
  language: String
}

type SanityColor {
  _key: String
  _rawHsl(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawHsv(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawRgb(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  alpha: Float
  hex: String
  hsl: SanityHslaColor
  hsv: SanityHsvaColor
  rgb: SanityRgbaColor
}

type SanityCta {
  _key: String
  _type: String
  kind: String
  link: String
  route: String
  title: String
}

type SanityCtaColumns {
  _key: String
  _rawColumns(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  columns: [SanityCtaPlug]
  disabled: Boolean
  title: String
}

type SanityCtaPlug {
  _key: String
  _rawBody(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawCtas(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  body: [SanityBlock]
  ctas: [SanityCta]
  disabled: Boolean
  label: String
  title: String
}

type SanityEventDay {
  _key: String
  _rawIllustration(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawTagline(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  details: String
  disabled: Boolean
  heading: String
  illustration: SanityIllustration
  tagline: [SanityBlock]
}

type SanityExperiment {
  _key: String
  _rawVariations(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  active: Boolean
  id: String
  variations: [SanityVariation]
}

type SanityFile {
  _key: String
  _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  asset: SanityFileAsset
}

type SanityFileAsset implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  assetId: String
  children: [Node!]!
  description: String
  extension: String
  id: ID!
  internal: Internal!
  label: String
  mimeType: String
  originalFilename: String
  parent: Node
  path: String
  sha1hash: String
  size: Float
  source: SanityAssetSourceData
  title: String
  url: String
}

type SanityFileAssetConnection {
  distinct(field: SanityFileAssetFieldsEnum!): [String!]!
  edges: [SanityFileAssetEdge!]!
  group(field: SanityFileAssetFieldsEnum!, limit: Int, skip: Int): [SanityFileAssetGroupConnection!]!
  nodes: [SanityFileAsset!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityFileAssetEdge {
  next: SanityFileAsset
  node: SanityFileAsset!
  previous: SanityFileAsset
}

type SanityFileAssetGroupConnection {
  edges: [SanityFileAssetEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityFileAsset!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityGeopoint {
  _key: String
  _type: String
  alt: Float
  lat: Float
  lng: Float
}

type SanityHero {
  _key: String
  _rawCta(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawIllustration(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawTagline(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  cta: SanityCta
  disabled: Boolean
  heading: String
  illustration: SanityIllustration
  label: String
  tagline: [SanityBlock]
}

type SanityHslaColor {
  _key: String
  _type: String
  a: Float
  h: Float
  l: Float
  s: Float
}

type SanityHsvaColor {
  _key: String
  _type: String
  a: Float
  h: Float
  s: Float
  v: Float
}

type SanityIllustration {
  _key: String
  _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  disabled: Boolean
  image: SanityMainImage
}

type SanityImage {
  _key: String
  _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawCrop(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawHotspot(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  asset: SanityImageAsset
  crop: SanityImageCrop
  hotspot: SanityImageHotspot
}

type SanityImageAsset implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawMetadata(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  assetId: String
  childImageSharp: ImageSharp
  children: [Node!]!
  description: String
  extension: String
  fixed(height: Int, toFormat: SanityImageFormat = NO_CHANGE, width: Int = 400): SanityImageFixed
  fluid(maxHeight: Int, maxWidth: Int = 800, sizes: String, toFormat: SanityImageFormat = NO_CHANGE): SanityImageFluid
  id: ID!
  internal: Internal!
  label: String
  metadata: SanityImageMetadata
  mimeType: String
  originalFilename: String
  parent: Node
  path: String
  sha1hash: String
  size: Float
  source: SanityAssetSourceData
  title: String
  url: String
}

type SanityImageAssetConnection {
  distinct(field: SanityImageAssetFieldsEnum!): [String!]!
  edges: [SanityImageAssetEdge!]!
  group(field: SanityImageAssetFieldsEnum!, limit: Int, skip: Int): [SanityImageAssetGroupConnection!]!
  nodes: [SanityImageAsset!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityImageAssetEdge {
  next: SanityImageAsset
  node: SanityImageAsset!
  previous: SanityImageAsset
}

type SanityImageAssetGroupConnection {
  edges: [SanityImageAssetEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityImageAsset!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityImageCrop {
  _key: String
  _type: String
  bottom: Float
  left: Float
  right: Float
  top: Float
}

type SanityImageDimensions {
  _key: String
  _type: String
  aspectRatio: Float
  height: Float
  width: Float
}

type SanityImageFixed {
  base64: String
  height: Float!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
  width: Float!
}

type SanityImageFluid {
  aspectRatio: Float!
  base64: String
  sizes: String!
  src: String!
  srcSet: String!
  srcSetWebp: String
  srcWebp: String
}

type SanityImageHotspot {
  _key: String
  _type: String
  height: Float
  width: Float
  x: Float
  y: Float
}

type SanityImageMetadata {
  _key: String
  _rawDimensions(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawLocation(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawPalette(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  dimensions: SanityImageDimensions
  hasAlpha: Boolean
  isOpaque: Boolean
  location: SanityGeopoint
  lqip: String
  palette: SanityImagePalette
}

type SanityImagePalette {
  _key: String
  _rawDarkMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawDarkVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawDominant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawLightMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawLightVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  darkMuted: SanityImagePaletteSwatch
  darkVibrant: SanityImagePaletteSwatch
  dominant: SanityImagePaletteSwatch
  lightMuted: SanityImagePaletteSwatch
  lightVibrant: SanityImagePaletteSwatch
  muted: SanityImagePaletteSwatch
  vibrant: SanityImagePaletteSwatch
}

type SanityImagePaletteSwatch {
  _key: String
  _type: String
  background: String
  foreground: String
  population: Float
  title: String
}

type SanityInfoRows {
  _key: String
  _rawRows(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  disabled: Boolean
  rows: [SanityTextWithIllustration]
  title: String
}

type SanityInstagram {
  _key: String
  _type: String
  url: String
}

type SanityLink {
  _key: String
  _type: String
  href: String
}

type SanityLocaleString {
  _key: String
  _type: String
  en: String
  es: String
  nb: String
  sv: String
}

type SanityMainImage {
  _key: String
  _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawCrop(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawHotspot(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  alt: String
  asset: SanityImageAsset
  caption: String
  crop: SanityImageCrop
  hotspot: SanityImageHotspot
}

type SanityMath {
  _key: String
  _type: String
  latex: String
}

type SanityMenuItem implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawMenuItemCategory(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawMenuItemPriceOption(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSlug(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  description: String
  id: ID!
  image: SanityImage
  internal: Internal!
  menuItemCategory: [SanityMenuItemCategory]
  menuItemPriceOption: [SanityMenuItemPriceOption]
  name: String
  parent: Node
  slug: SanitySlug
}

type SanityMenuItemCategory implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  description: String
  id: ID!
  internal: Internal!
  parent: Node
  title: String
}

type SanityMenuItemCategoryConnection {
  distinct(field: SanityMenuItemCategoryFieldsEnum!): [String!]!
  edges: [SanityMenuItemCategoryEdge!]!
  group(field: SanityMenuItemCategoryFieldsEnum!, limit: Int, skip: Int): [SanityMenuItemCategoryGroupConnection!]!
  nodes: [SanityMenuItemCategory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityMenuItemCategoryEdge {
  next: SanityMenuItemCategory
  node: SanityMenuItemCategory!
  previous: SanityMenuItemCategory
}

type SanityMenuItemCategoryGroupConnection {
  edges: [SanityMenuItemCategoryEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityMenuItemCategory!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityMenuItemConnection {
  distinct(field: SanityMenuItemFieldsEnum!): [String!]!
  edges: [SanityMenuItemEdge!]!
  group(field: SanityMenuItemFieldsEnum!, limit: Int, skip: Int): [SanityMenuItemGroupConnection!]!
  nodes: [SanityMenuItem!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityMenuItemEdge {
  next: SanityMenuItem
  node: SanityMenuItem!
  previous: SanityMenuItem
}

type SanityMenuItemGroupConnection {
  edges: [SanityMenuItemEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityMenuItem!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityMenuItemPriceOption {
  _key: String
  _type: String
  price: Float
  variant: String
}

type SanityMuxVideo {
  _key: String
  _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  asset: SanityMuxVideoAsset
}

type SanityMuxVideoAsset {
  _key: String
  _type: String
  assetId: String
  filename: String
  playbackId: String
  status: String
  thumbTime: Float
}

type SanityOpenGraph {
  _key: String
  _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  description: String
  image: SanityMainImage
  title: String
}

type SanityPage implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawHero(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  hero: SanityHero
  id: ID!
  internal: Internal!
  parent: Node
  title: String
}

type SanityPageConnection {
  distinct(field: SanityPageFieldsEnum!): [String!]!
  edges: [SanityPageEdge!]!
  group(field: SanityPageFieldsEnum!, limit: Int, skip: Int): [SanityPageGroupConnection!]!
  nodes: [SanityPage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityPageEdge {
  next: SanityPage
  node: SanityPage!
  previous: SanityPage
}

type SanityPageGroupConnection {
  edges: [SanityPageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityPage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityPost implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawAuthors(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawBody(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawCategories(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawExcerpt(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawMainImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSlug(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  authors: [SanityAuthorReference]
  body: [SanityBlock]
  categories: [SanityCategory]
  children: [Node!]!
  excerpt: [SanityBlock]
  id: ID!
  internal: Internal!
  isPublished: Boolean!
  mainImage: SanityMainImage
  parent: Node
  publishedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  slug: SanitySlug
  title: String
}

type SanityPostConnection {
  distinct(field: SanityPostFieldsEnum!): [String!]!
  edges: [SanityPostEdge!]!
  group(field: SanityPostFieldsEnum!, limit: Int, skip: Int): [SanityPostGroupConnection!]!
  nodes: [SanityPost!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityPostEdge {
  next: SanityPost
  node: SanityPost!
  previous: SanityPost
}

type SanityPostGroupConnection {
  edges: [SanityPostEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityPost!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityPricing {
  _key: String
  _type: String
  disabled: Boolean
  title: String
  transparentCTAs: Boolean
}

type SanityRgbaColor {
  _key: String
  _type: String
  a: Float
  b: Float
  g: Float
  r: Float
}

type SanitySiteSettings implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawHappyHour(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawOpenGraph(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawPrimaryColor(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSecondaryColor(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  address: String
  children: [Node!]!
  facebookPage: String
  happyHour: [SanityBlock]
  id: ID!
  instagramPage: String
  internal: Internal!
  openGraph: SanityOpenGraph
  parent: Node
  primaryColor: SanityColor
  secondaryColor: SanityColor
  twitterPage: String
}

type SanitySiteSettingsConnection {
  distinct(field: SanitySiteSettingsFieldsEnum!): [String!]!
  edges: [SanitySiteSettingsEdge!]!
  group(field: SanitySiteSettingsFieldsEnum!, limit: Int, skip: Int): [SanitySiteSettingsGroupConnection!]!
  nodes: [SanitySiteSettings!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanitySiteSettingsEdge {
  next: SanitySiteSettings
  node: SanitySiteSettings!
  previous: SanitySiteSettings
}

type SanitySiteSettingsGroupConnection {
  edges: [SanitySiteSettingsEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanitySiteSettings!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanitySlug {
  _key: String
  _type: String
  current: String
}

type SanitySpan {
  _key: String
  _type: String
  marks: [String]
  text: String
}

type SanityTextWithIllustration {
  _key: String
  _rawIllustration(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawText(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  disabled: Boolean
  illustration: SanityIllustration
  text: [SanityBlock]
  title: String
}

type SanityUiComponentRef {
  _key: String
  _type: String
  disabled: Boolean
  name: String
}

type SanityVariation {
  _key: String
  _rawPage(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _type: String
  page: SanityPage
  percentage: Float
  variationId: String
}

type SanityVideoEmbed {
  _key: String
  _type: String
  url: String
}

type SanityWeeklyEvents implements Node & SanityDocument {
  _createdAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  _id: String
  _key: String
  _rawFriday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawMonday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSaturday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawSunday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawThursday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawTuesday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rawWednesday(resolveReferences: SanityResolveReferencesConfiguration): JSON
  _rev: String
  _type: String
  _updatedAt(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  friday: SanityEventDay
  id: ID!
  internal: Internal!
  monday: SanityEventDay
  parent: Node
  saturday: SanityEventDay
  sunday: SanityEventDay
  thursday: SanityEventDay
  tuesday: SanityEventDay
  wednesday: SanityEventDay
}

type SanityWeeklyEventsConnection {
  distinct(field: SanityWeeklyEventsFieldsEnum!): [String!]!
  edges: [SanityWeeklyEventsEdge!]!
  group(field: SanityWeeklyEventsFieldsEnum!, limit: Int, skip: Int): [SanityWeeklyEventsGroupConnection!]!
  nodes: [SanityWeeklyEvents!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SanityWeeklyEventsEdge {
  next: SanityWeeklyEvents
  node: SanityWeeklyEvents!
  previous: SanityWeeklyEvents
}

type SanityWeeklyEventsGroupConnection {
  edges: [SanityWeeklyEventsEdge!]!
  field: String!
  fieldValue: String
  nodes: [SanityWeeklyEvents!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type Site implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  host: String
  id: ID!
  internal: Internal!
  parent: Node
  pathPrefix: String
  polyfill: Boolean
  port: Int
  siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
  buildTime(
    "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
    difference: String,
    "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
    formatString: String,
    "Returns a string generated with Moment.js' `fromNow` function"
    fromNow: Boolean,
    "Configures the locale Moment.js will use to format the date."
    locale: String
  ): Date
  children: [Node!]!
  id: ID!
  internal: Internal!
  parent: Node
}

type SiteBuildMetadataConnection {
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  edges: [SiteBuildMetadataEdge!]!
  group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
  edges: [SiteBuildMetadataEdge!]!
  field: String!
  fieldValue: String
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteConnection {
  distinct(field: SiteFieldsEnum!): [String!]!
  edges: [SiteEdge!]!
  group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

type SiteGroupConnection {
  edges: [SiteEdge!]!
  field: String!
  fieldValue: String
  nodes: [Site!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePage implements Node {
  children: [Node!]!
  component: String!
  componentChunkName: String!
  componentPath: String
  id: ID!
  internal: Internal!
  internalComponentName: String!
  isCreatedByStatefulCreatePages: Boolean
  matchPath: String
  parent: Node
  path: String!
  pluginCreator: SitePlugin
  pluginCreatorId: String
}

type SitePageConnection {
  distinct(field: SitePageFieldsEnum!): [String!]!
  edges: [SitePageEdge!]!
  group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

type SitePageGroupConnection {
  edges: [SitePageEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePlugin implements Node {
  browserAPIs: [String]
  children: [Node!]!
  id: ID!
  internal: Internal!
  name: String
  nodeAPIs: [String]
  packageJson: SitePluginPackageJson
  parent: Node
  pluginFilepath: String
  pluginOptions: SitePluginPluginOptions
  resolve: String
  ssrAPIs: [String]
  version: String
}

type SitePluginConnection {
  distinct(field: SitePluginFieldsEnum!): [String!]!
  edges: [SitePluginEdge!]!
  group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

type SitePluginGroupConnection {
  edges: [SitePluginEdge!]!
  field: String!
  fieldValue: String
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type SitePluginPackageJson {
  dependencies: [SitePluginPackageJsonDependencies]
  description: String
  devDependencies: [SitePluginPackageJsonDevDependencies]
  keywords: [String]
  license: String
  main: String
  name: String
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  version: String
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

type SitePluginPluginOptions {
  center: String
  dataset: String
  defaultQuality: Int
  format: String
  implementation: SitePluginPluginOptionsImplementation
  key: String
  markers: [SitePluginPluginOptionsMarkers]
  name: String
  nickname: String
  openGraph: SitePluginPluginOptionsOpenGraph
  options: SitePluginPluginOptionsOptions
  overlayDrafts: Boolean
  path: String
  pathCheck: Boolean
  projectId: String
  scale: Int
  stages: [String]
  stripMetadata: Boolean
  styles: [SitePluginPluginOptionsStyles]
  stylesProvider: SitePluginPluginOptionsStylesProvider
  titleTemplate: String
  useMozJpeg: Boolean
  useResolveUrlLoader: SitePluginPluginOptionsUseResolveUrlLoader
  watchMode: Boolean
  zoom: Int
}

type SitePluginPluginOptionsImplementation {
  info: String
}

type SitePluginPluginOptionsMarkers {
  color: String
  location: String
  size: String
}

type SitePluginPluginOptionsOpenGraph {
  locale: String
  site_name: String
  type: String
  url: String
}

type SitePluginPluginOptionsOptions {
  emitWarning: Boolean
  failOnError: Boolean
}

type SitePluginPluginOptionsStyles {
  element: String
  feature: String
  rules: [SitePluginPluginOptionsStylesRules]
}

type SitePluginPluginOptionsStylesProvider {
  injectFirst: Boolean
}

type SitePluginPluginOptionsStylesRules {
  color: String
  hue: String
  visibility: String
  weight: Float
}

type SitePluginPluginOptionsUseResolveUrlLoader {
  options: SitePluginPluginOptionsUseResolveUrlLoaderOptions
}

type SitePluginPluginOptionsUseResolveUrlLoaderOptions {
  sourceMap: Boolean
}

type SiteSiteMetadata {
  author: String
  description: String
  title: String
}

type StaticMap implements Node {
  absolutePath: String
  center: String
  childFile: File
  children: [Node!]!
  hash: String
  id: ID!
  internal: Internal!
  mapUrl: String
  nickname: String
  parent: Node
}

type StaticMapConnection {
  distinct(field: StaticMapFieldsEnum!): [String!]!
  edges: [StaticMapEdge!]!
  group(field: StaticMapFieldsEnum!, limit: Int, skip: Int): [StaticMapGroupConnection!]!
  nodes: [StaticMap!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

type StaticMapEdge {
  next: StaticMap
  node: StaticMap!
  previous: StaticMap
}

type StaticMapGroupConnection {
  edges: [StaticMapEdge!]!
  field: String!
  fieldValue: String
  nodes: [StaticMap!]!
  pageInfo: PageInfo!
  totalCount: Int!
}

enum DirectoryFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum FileFieldsEnum {
  absolutePath
  accessTime
  atime
  atimeMs
  base
  birthTime
  birthtime
  birthtimeMs
  blksize
  blocks
  changeTime
  childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  ctime
  ctimeMs
  dev
  dir
  ext
  extension
  gid
  hash
  id
  ino
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mode
  modifiedTime
  mtime
  mtimeMs
  name
  nlink
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  prettySize
  publicURL
  rdev
  relativeDirectory
  relativePath
  root
  size
  sourceInstanceName
  uid
}

enum ImageCropFocus {
  ATTENTION
  CENTER
  EAST
  ENTROPY
  NORTH
  NORTHEAST
  NORTHWEST
  SOUTH
  SOUTHEAST
  SOUTHWEST
  WEST
}

enum ImageFit {
  CONTAIN
  COVER
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum ImageSharpFieldsEnum {
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_LEFT
  TURNPOLICY_MAJORITY
  TURNPOLICY_MINORITY
  TURNPOLICY_RIGHT
  TURNPOLICY_WHITE
}

enum SanityAuthorFieldsEnum {
  _createdAt
  _id
  _key
  _rawBio
  _rawImage
  _rawSlug
  _rev
  _type
  _updatedAt
  bio
  bio____key
  bio____rawChildren
  bio____type
  bio___children
  bio___children____key
  bio___children____type
  bio___children___marks
  bio___children___text
  bio___list
  bio___style
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  image____key
  image____rawAsset
  image____rawCrop
  image____rawHotspot
  image____type
  image___alt
  image___asset____createdAt
  image___asset____id
  image___asset____key
  image___asset____rawMetadata
  image___asset____rawSource
  image___asset____rev
  image___asset____type
  image___asset____updatedAt
  image___asset___assetId
  image___asset___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___description
  image___asset___extension
  image___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___label
  image___asset___metadata____key
  image___asset___metadata____rawDimensions
  image___asset___metadata____rawLocation
  image___asset___metadata____rawPalette
  image___asset___metadata____type
  image___asset___metadata___hasAlpha
  image___asset___metadata___isOpaque
  image___asset___metadata___lqip
  image___asset___mimeType
  image___asset___originalFilename
  image___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___path
  image___asset___sha1hash
  image___asset___size
  image___asset___source____key
  image___asset___source____type
  image___asset___source___id
  image___asset___source___name
  image___asset___source___url
  image___asset___title
  image___asset___url
  image___caption
  image___crop____key
  image___crop____type
  image___crop___bottom
  image___crop___left
  image___crop___right
  image___crop___top
  image___hotspot____key
  image___hotspot____type
  image___hotspot___height
  image___hotspot___width
  image___hotspot___x
  image___hotspot___y
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug____key
  slug____type
  slug___current
}

enum SanityCategoryFieldsEnum {
  _createdAt
  _id
  _key
  _rev
  _type
  _updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  title
}

enum SanityFileAssetFieldsEnum {
  _createdAt
  _id
  _key
  _rawSource
  _rev
  _type
  _updatedAt
  assetId
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  extension
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  label
  mimeType
  originalFilename
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  sha1hash
  size
  source____key
  source____type
  source___id
  source___name
  source___url
  title
  url
}

enum SanityImageAssetFieldsEnum {
  _createdAt
  _id
  _key
  _rawMetadata
  _rawSource
  _rev
  _type
  _updatedAt
  assetId
  childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  description
  extension
  fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  label
  metadata____key
  metadata____rawDimensions
  metadata____rawLocation
  metadata____rawPalette
  metadata____type
  metadata___dimensions____key
  metadata___dimensions____type
  metadata___dimensions___aspectRatio
  metadata___dimensions___height
  metadata___dimensions___width
  metadata___hasAlpha
  metadata___isOpaque
  metadata___location____key
  metadata___location____type
  metadata___location___alt
  metadata___location___lat
  metadata___location___lng
  metadata___lqip
  metadata___palette____key
  metadata___palette____rawDarkMuted
  metadata___palette____rawDarkVibrant
  metadata___palette____rawDominant
  metadata___palette____rawLightMuted
  metadata___palette____rawLightVibrant
  metadata___palette____rawMuted
  metadata___palette____rawVibrant
  metadata___palette____type
  metadata___palette___darkMuted____key
  metadata___palette___darkMuted____type
  metadata___palette___darkMuted___background
  metadata___palette___darkMuted___foreground
  metadata___palette___darkMuted___population
  metadata___palette___darkMuted___title
  metadata___palette___darkVibrant____key
  metadata___palette___darkVibrant____type
  metadata___palette___darkVibrant___background
  metadata___palette___darkVibrant___foreground
  metadata___palette___darkVibrant___population
  metadata___palette___darkVibrant___title
  metadata___palette___dominant____key
  metadata___palette___dominant____type
  metadata___palette___dominant___background
  metadata___palette___dominant___foreground
  metadata___palette___dominant___population
  metadata___palette___dominant___title
  metadata___palette___lightMuted____key
  metadata___palette___lightMuted____type
  metadata___palette___lightMuted___background
  metadata___palette___lightMuted___foreground
  metadata___palette___lightMuted___population
  metadata___palette___lightMuted___title
  metadata___palette___lightVibrant____key
  metadata___palette___lightVibrant____type
  metadata___palette___lightVibrant___background
  metadata___palette___lightVibrant___foreground
  metadata___palette___lightVibrant___population
  metadata___palette___lightVibrant___title
  metadata___palette___muted____key
  metadata___palette___muted____type
  metadata___palette___muted___background
  metadata___palette___muted___foreground
  metadata___palette___muted___population
  metadata___palette___muted___title
  metadata___palette___vibrant____key
  metadata___palette___vibrant____type
  metadata___palette___vibrant___background
  metadata___palette___vibrant___foreground
  metadata___palette___vibrant___population
  metadata___palette___vibrant___title
  mimeType
  originalFilename
  parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  path
  sha1hash
  size
  source____key
  source____type
  source___id
  source___name
  source___url
  title
  url
}

enum SanityImageFormat {
  JPG
  NO_CHANGE
  PNG
  WEBP
}

enum SanityMenuItemCategoryFieldsEnum {
  _createdAt
  _id
  _key
  _rev
  _type
  _updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  title
}

enum SanityMenuItemFieldsEnum {
  _createdAt
  _id
  _key
  _rawImage
  _rawMenuItemCategory
  _rawMenuItemPriceOption
  _rawSlug
  _rev
  _type
  _updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  description
  id
  image____key
  image____rawAsset
  image____rawCrop
  image____rawHotspot
  image____type
  image___asset____createdAt
  image___asset____id
  image___asset____key
  image___asset____rawMetadata
  image___asset____rawSource
  image___asset____rev
  image___asset____type
  image___asset____updatedAt
  image___asset___assetId
  image___asset___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___description
  image___asset___extension
  image___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___label
  image___asset___metadata____key
  image___asset___metadata____rawDimensions
  image___asset___metadata____rawLocation
  image___asset___metadata____rawPalette
  image___asset___metadata____type
  image___asset___metadata___hasAlpha
  image___asset___metadata___isOpaque
  image___asset___metadata___lqip
  image___asset___mimeType
  image___asset___originalFilename
  image___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  image___asset___path
  image___asset___sha1hash
  image___asset___size
  image___asset___source____key
  image___asset___source____type
  image___asset___source___id
  image___asset___source___name
  image___asset___source___url
  image___asset___title
  image___asset___url
  image___crop____key
  image___crop____type
  image___crop___bottom
  image___crop___left
  image___crop___right
  image___crop___top
  image___hotspot____key
  image___hotspot____type
  image___hotspot___height
  image___hotspot___width
  image___hotspot___x
  image___hotspot___y
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  menuItemCategory
  menuItemCategory____createdAt
  menuItemCategory____id
  menuItemCategory____key
  menuItemCategory____rev
  menuItemCategory____type
  menuItemCategory____updatedAt
  menuItemCategory___children
  menuItemCategory___children___children
  menuItemCategory___children___children___children
  menuItemCategory___children___children___id
  menuItemCategory___children___id
  menuItemCategory___children___internal___content
  menuItemCategory___children___internal___contentDigest
  menuItemCategory___children___internal___description
  menuItemCategory___children___internal___fieldOwners
  menuItemCategory___children___internal___ignoreType
  menuItemCategory___children___internal___mediaType
  menuItemCategory___children___internal___owner
  menuItemCategory___children___internal___type
  menuItemCategory___children___parent___children
  menuItemCategory___children___parent___id
  menuItemCategory___description
  menuItemCategory___id
  menuItemCategory___internal___content
  menuItemCategory___internal___contentDigest
  menuItemCategory___internal___description
  menuItemCategory___internal___fieldOwners
  menuItemCategory___internal___ignoreType
  menuItemCategory___internal___mediaType
  menuItemCategory___internal___owner
  menuItemCategory___internal___type
  menuItemCategory___parent___children
  menuItemCategory___parent___children___children
  menuItemCategory___parent___children___id
  menuItemCategory___parent___id
  menuItemCategory___parent___internal___content
  menuItemCategory___parent___internal___contentDigest
  menuItemCategory___parent___internal___description
  menuItemCategory___parent___internal___fieldOwners
  menuItemCategory___parent___internal___ignoreType
  menuItemCategory___parent___internal___mediaType
  menuItemCategory___parent___internal___owner
  menuItemCategory___parent___internal___type
  menuItemCategory___parent___parent___children
  menuItemCategory___parent___parent___id
  menuItemCategory___title
  menuItemPriceOption
  menuItemPriceOption____key
  menuItemPriceOption____type
  menuItemPriceOption___price
  menuItemPriceOption___variant
  name
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  slug____key
  slug____type
  slug___current
}

enum SanityPageFieldsEnum {
  _createdAt
  _id
  _key
  _rawHero
  _rev
  _type
  _updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  hero____key
  hero____rawCta
  hero____rawIllustration
  hero____rawTagline
  hero____type
  hero___cta____key
  hero___cta____type
  hero___cta___kind
  hero___cta___link
  hero___cta___route
  hero___cta___title
  hero___disabled
  hero___heading
  hero___illustration____key
  hero___illustration____rawImage
  hero___illustration____type
  hero___illustration___disabled
  hero___illustration___image____key
  hero___illustration___image____rawAsset
  hero___illustration___image____rawCrop
  hero___illustration___image____rawHotspot
  hero___illustration___image____type
  hero___illustration___image___alt
  hero___illustration___image___caption
  hero___label
  hero___tagline
  hero___tagline____key
  hero___tagline____rawChildren
  hero___tagline____type
  hero___tagline___children
  hero___tagline___children____key
  hero___tagline___children____type
  hero___tagline___children___marks
  hero___tagline___children___text
  hero___tagline___list
  hero___tagline___style
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  title
}

enum SanityPostFieldsEnum {
  _createdAt
  _id
  _key
  _rawAuthors
  _rawBody
  _rawCategories
  _rawExcerpt
  _rawMainImage
  _rawSlug
  _rev
  _type
  _updatedAt
  authors
  authors____key
  authors____rawAuthor
  authors____type
  authors___author____createdAt
  authors___author____id
  authors___author____key
  authors___author____rawBio
  authors___author____rawImage
  authors___author____rawSlug
  authors___author____rev
  authors___author____type
  authors___author____updatedAt
  authors___author___bio
  authors___author___bio____key
  authors___author___bio____rawChildren
  authors___author___bio____type
  authors___author___bio___children
  authors___author___bio___list
  authors___author___bio___style
  authors___author___children
  authors___author___children___children
  authors___author___children___id
  authors___author___id
  authors___author___image____key
  authors___author___image____rawAsset
  authors___author___image____rawCrop
  authors___author___image____rawHotspot
  authors___author___image____type
  authors___author___image___alt
  authors___author___image___caption
  authors___author___internal___content
  authors___author___internal___contentDigest
  authors___author___internal___description
  authors___author___internal___fieldOwners
  authors___author___internal___ignoreType
  authors___author___internal___mediaType
  authors___author___internal___owner
  authors___author___internal___type
  authors___author___name
  authors___author___parent___children
  authors___author___parent___id
  authors___author___slug____key
  authors___author___slug____type
  authors___author___slug___current
  body
  body____key
  body____rawChildren
  body____type
  body___children
  body___children____key
  body___children____type
  body___children___marks
  body___children___text
  body___list
  body___style
  categories
  categories____createdAt
  categories____id
  categories____key
  categories____rev
  categories____type
  categories____updatedAt
  categories___children
  categories___children___children
  categories___children___children___children
  categories___children___children___id
  categories___children___id
  categories___children___internal___content
  categories___children___internal___contentDigest
  categories___children___internal___description
  categories___children___internal___fieldOwners
  categories___children___internal___ignoreType
  categories___children___internal___mediaType
  categories___children___internal___owner
  categories___children___internal___type
  categories___children___parent___children
  categories___children___parent___id
  categories___description
  categories___id
  categories___internal___content
  categories___internal___contentDigest
  categories___internal___description
  categories___internal___fieldOwners
  categories___internal___ignoreType
  categories___internal___mediaType
  categories___internal___owner
  categories___internal___type
  categories___parent___children
  categories___parent___children___children
  categories___parent___children___id
  categories___parent___id
  categories___parent___internal___content
  categories___parent___internal___contentDigest
  categories___parent___internal___description
  categories___parent___internal___fieldOwners
  categories___parent___internal___ignoreType
  categories___parent___internal___mediaType
  categories___parent___internal___owner
  categories___parent___internal___type
  categories___parent___parent___children
  categories___parent___parent___id
  categories___title
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  excerpt
  excerpt____key
  excerpt____rawChildren
  excerpt____type
  excerpt___children
  excerpt___children____key
  excerpt___children____type
  excerpt___children___marks
  excerpt___children___text
  excerpt___list
  excerpt___style
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isPublished
  mainImage____key
  mainImage____rawAsset
  mainImage____rawCrop
  mainImage____rawHotspot
  mainImage____type
  mainImage___alt
  mainImage___asset____createdAt
  mainImage___asset____id
  mainImage___asset____key
  mainImage___asset____rawMetadata
  mainImage___asset____rawSource
  mainImage___asset____rev
  mainImage___asset____type
  mainImage___asset____updatedAt
  mainImage___asset___assetId
  mainImage___asset___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___description
  mainImage___asset___extension
  mainImage___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___label
  mainImage___asset___metadata____key
  mainImage___asset___metadata____rawDimensions
  mainImage___asset___metadata____rawLocation
  mainImage___asset___metadata____rawPalette
  mainImage___asset___metadata____type
  mainImage___asset___metadata___hasAlpha
  mainImage___asset___metadata___isOpaque
  mainImage___asset___metadata___lqip
  mainImage___asset___mimeType
  mainImage___asset___originalFilename
  mainImage___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  mainImage___asset___path
  mainImage___asset___sha1hash
  mainImage___asset___size
  mainImage___asset___source____key
  mainImage___asset___source____type
  mainImage___asset___source___id
  mainImage___asset___source___name
  mainImage___asset___source___url
  mainImage___asset___title
  mainImage___asset___url
  mainImage___caption
  mainImage___crop____key
  mainImage___crop____type
  mainImage___crop___bottom
  mainImage___crop___left
  mainImage___crop___right
  mainImage___crop___top
  mainImage___hotspot____key
  mainImage___hotspot____type
  mainImage___hotspot___height
  mainImage___hotspot___width
  mainImage___hotspot___x
  mainImage___hotspot___y
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  publishedAt
  slug____key
  slug____type
  slug___current
  title
}

enum SanitySiteSettingsFieldsEnum {
  _createdAt
  _id
  _key
  _rawHappyHour
  _rawOpenGraph
  _rawPrimaryColor
  _rawSecondaryColor
  _rev
  _type
  _updatedAt
  address
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  facebookPage
  happyHour
  happyHour____key
  happyHour____rawChildren
  happyHour____type
  happyHour___children
  happyHour___children____key
  happyHour___children____type
  happyHour___children___marks
  happyHour___children___text
  happyHour___list
  happyHour___style
  id
  instagramPage
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  openGraph____key
  openGraph____rawImage
  openGraph____type
  openGraph___description
  openGraph___image____key
  openGraph___image____rawAsset
  openGraph___image____rawCrop
  openGraph___image____rawHotspot
  openGraph___image____type
  openGraph___image___alt
  openGraph___image___asset____createdAt
  openGraph___image___asset____id
  openGraph___image___asset____key
  openGraph___image___asset____rawMetadata
  openGraph___image___asset____rawSource
  openGraph___image___asset____rev
  openGraph___image___asset____type
  openGraph___image___asset____updatedAt
  openGraph___image___asset___assetId
  openGraph___image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  openGraph___image___asset___description
  openGraph___image___asset___extension
  openGraph___image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  openGraph___image___asset___label
  openGraph___image___asset___mimeType
  openGraph___image___asset___originalFilename
  openGraph___image___asset___path
  openGraph___image___asset___sha1hash
  openGraph___image___asset___size
  openGraph___image___asset___title
  openGraph___image___asset___url
  openGraph___image___caption
  openGraph___image___crop____key
  openGraph___image___crop____type
  openGraph___image___crop___bottom
  openGraph___image___crop___left
  openGraph___image___crop___right
  openGraph___image___crop___top
  openGraph___image___hotspot____key
  openGraph___image___hotspot____type
  openGraph___image___hotspot___height
  openGraph___image___hotspot___width
  openGraph___image___hotspot___x
  openGraph___image___hotspot___y
  openGraph___title
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  primaryColor____key
  primaryColor____rawHsl
  primaryColor____rawHsv
  primaryColor____rawRgb
  primaryColor____type
  primaryColor___alpha
  primaryColor___hex
  primaryColor___hsl____key
  primaryColor___hsl____type
  primaryColor___hsl___a
  primaryColor___hsl___h
  primaryColor___hsl___l
  primaryColor___hsl___s
  primaryColor___hsv____key
  primaryColor___hsv____type
  primaryColor___hsv___a
  primaryColor___hsv___h
  primaryColor___hsv___s
  primaryColor___hsv___v
  primaryColor___rgb____key
  primaryColor___rgb____type
  primaryColor___rgb___a
  primaryColor___rgb___b
  primaryColor___rgb___g
  primaryColor___rgb___r
  secondaryColor____key
  secondaryColor____rawHsl
  secondaryColor____rawHsv
  secondaryColor____rawRgb
  secondaryColor____type
  secondaryColor___alpha
  secondaryColor___hex
  secondaryColor___hsl____key
  secondaryColor___hsl____type
  secondaryColor___hsl___a
  secondaryColor___hsl___h
  secondaryColor___hsl___l
  secondaryColor___hsl___s
  secondaryColor___hsv____key
  secondaryColor___hsv____type
  secondaryColor___hsv___a
  secondaryColor___hsv___h
  secondaryColor___hsv___s
  secondaryColor___hsv___v
  secondaryColor___rgb____key
  secondaryColor___rgb____type
  secondaryColor___rgb___a
  secondaryColor___rgb___b
  secondaryColor___rgb___g
  secondaryColor___rgb___r
  twitterPage
}

enum SanityWeeklyEventsFieldsEnum {
  _createdAt
  _id
  _key
  _rawFriday
  _rawMonday
  _rawSaturday
  _rawSunday
  _rawThursday
  _rawTuesday
  _rawWednesday
  _rev
  _type
  _updatedAt
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  friday____key
  friday____rawIllustration
  friday____rawTagline
  friday____type
  friday___details
  friday___disabled
  friday___heading
  friday___illustration____key
  friday___illustration____rawImage
  friday___illustration____type
  friday___illustration___disabled
  friday___illustration___image____key
  friday___illustration___image____rawAsset
  friday___illustration___image____rawCrop
  friday___illustration___image____rawHotspot
  friday___illustration___image____type
  friday___illustration___image___alt
  friday___illustration___image___caption
  friday___tagline
  friday___tagline____key
  friday___tagline____rawChildren
  friday___tagline____type
  friday___tagline___children
  friday___tagline___children____key
  friday___tagline___children____type
  friday___tagline___children___marks
  friday___tagline___children___text
  friday___tagline___list
  friday___tagline___style
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  monday____key
  monday____rawIllustration
  monday____rawTagline
  monday____type
  monday___details
  monday___disabled
  monday___heading
  monday___illustration____key
  monday___illustration____rawImage
  monday___illustration____type
  monday___illustration___disabled
  monday___illustration___image____key
  monday___illustration___image____rawAsset
  monday___illustration___image____rawCrop
  monday___illustration___image____rawHotspot
  monday___illustration___image____type
  monday___illustration___image___alt
  monday___illustration___image___caption
  monday___tagline
  monday___tagline____key
  monday___tagline____rawChildren
  monday___tagline____type
  monday___tagline___children
  monday___tagline___children____key
  monday___tagline___children____type
  monday___tagline___children___marks
  monday___tagline___children___text
  monday___tagline___list
  monday___tagline___style
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  saturday____key
  saturday____rawIllustration
  saturday____rawTagline
  saturday____type
  saturday___details
  saturday___disabled
  saturday___heading
  saturday___illustration____key
  saturday___illustration____rawImage
  saturday___illustration____type
  saturday___illustration___disabled
  saturday___illustration___image____key
  saturday___illustration___image____rawAsset
  saturday___illustration___image____rawCrop
  saturday___illustration___image____rawHotspot
  saturday___illustration___image____type
  saturday___illustration___image___alt
  saturday___illustration___image___caption
  saturday___tagline
  saturday___tagline____key
  saturday___tagline____rawChildren
  saturday___tagline____type
  saturday___tagline___children
  saturday___tagline___children____key
  saturday___tagline___children____type
  saturday___tagline___children___marks
  saturday___tagline___children___text
  saturday___tagline___list
  saturday___tagline___style
  sunday____key
  sunday____rawIllustration
  sunday____rawTagline
  sunday____type
  sunday___details
  sunday___disabled
  sunday___heading
  sunday___illustration____key
  sunday___illustration____rawImage
  sunday___illustration____type
  sunday___illustration___disabled
  sunday___illustration___image____key
  sunday___illustration___image____rawAsset
  sunday___illustration___image____rawCrop
  sunday___illustration___image____rawHotspot
  sunday___illustration___image____type
  sunday___illustration___image___alt
  sunday___illustration___image___caption
  sunday___tagline
  sunday___tagline____key
  sunday___tagline____rawChildren
  sunday___tagline____type
  sunday___tagline___children
  sunday___tagline___children____key
  sunday___tagline___children____type
  sunday___tagline___children___marks
  sunday___tagline___children___text
  sunday___tagline___list
  sunday___tagline___style
  thursday____key
  thursday____rawIllustration
  thursday____rawTagline
  thursday____type
  thursday___details
  thursday___disabled
  thursday___heading
  thursday___illustration____key
  thursday___illustration____rawImage
  thursday___illustration____type
  thursday___illustration___disabled
  thursday___illustration___image____key
  thursday___illustration___image____rawAsset
  thursday___illustration___image____rawCrop
  thursday___illustration___image____rawHotspot
  thursday___illustration___image____type
  thursday___illustration___image___alt
  thursday___illustration___image___caption
  thursday___tagline
  thursday___tagline____key
  thursday___tagline____rawChildren
  thursday___tagline____type
  thursday___tagline___children
  thursday___tagline___children____key
  thursday___tagline___children____type
  thursday___tagline___children___marks
  thursday___tagline___children___text
  thursday___tagline___list
  thursday___tagline___style
  tuesday____key
  tuesday____rawIllustration
  tuesday____rawTagline
  tuesday____type
  tuesday___details
  tuesday___disabled
  tuesday___heading
  tuesday___illustration____key
  tuesday___illustration____rawImage
  tuesday___illustration____type
  tuesday___illustration___disabled
  tuesday___illustration___image____key
  tuesday___illustration___image____rawAsset
  tuesday___illustration___image____rawCrop
  tuesday___illustration___image____rawHotspot
  tuesday___illustration___image____type
  tuesday___illustration___image___alt
  tuesday___illustration___image___caption
  tuesday___tagline
  tuesday___tagline____key
  tuesday___tagline____rawChildren
  tuesday___tagline____type
  tuesday___tagline___children
  tuesday___tagline___children____key
  tuesday___tagline___children____type
  tuesday___tagline___children___marks
  tuesday___tagline___children___text
  tuesday___tagline___list
  tuesday___tagline___style
  wednesday____key
  wednesday____rawIllustration
  wednesday____rawTagline
  wednesday____type
  wednesday___details
  wednesday___disabled
  wednesday___heading
  wednesday___illustration____key
  wednesday___illustration____rawImage
  wednesday___illustration____type
  wednesday___illustration___disabled
  wednesday___illustration___image____key
  wednesday___illustration___image____rawAsset
  wednesday___illustration___image____rawCrop
  wednesday___illustration___image____rawHotspot
  wednesday___illustration___image____type
  wednesday___illustration___image___alt
  wednesday___illustration___image___caption
  wednesday___tagline
  wednesday___tagline____key
  wednesday___tagline____rawChildren
  wednesday___tagline____type
  wednesday___tagline___children
  wednesday___tagline___children____key
  wednesday___tagline___children____type
  wednesday___tagline___children___marks
  wednesday___tagline___children___text
  wednesday___tagline___list
  wednesday___tagline___style
}

enum SiteBuildMetadataFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

enum SiteFieldsEnum {
  buildTime
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  host
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pathPrefix
  polyfill
  port
  siteMetadata___author
  siteMetadata___description
  siteMetadata___title
}

enum SitePageFieldsEnum {
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  component
  componentChunkName
  componentPath
  id
  internalComponentName
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  isCreatedByStatefulCreatePages
  matchPath
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  path
  pluginCreatorId
  pluginCreator___browserAPIs
  pluginCreator___children
  pluginCreator___children___children
  pluginCreator___children___children___children
  pluginCreator___children___children___id
  pluginCreator___children___id
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___children___parent___children
  pluginCreator___children___parent___id
  pluginCreator___id
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___name
  pluginCreator___nodeAPIs
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___description
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreator___packageJson___license
  pluginCreator___packageJson___main
  pluginCreator___packageJson___name
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___version
  pluginCreator___parent___children
  pluginCreator___parent___children___children
  pluginCreator___parent___children___id
  pluginCreator___parent___id
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___parent___parent___children
  pluginCreator___parent___parent___id
  pluginCreator___pluginFilepath
  pluginCreator___pluginOptions___center
  pluginCreator___pluginOptions___dataset
  pluginCreator___pluginOptions___defaultQuality
  pluginCreator___pluginOptions___format
  pluginCreator___pluginOptions___implementation___info
  pluginCreator___pluginOptions___key
  pluginCreator___pluginOptions___markers
  pluginCreator___pluginOptions___markers___color
  pluginCreator___pluginOptions___markers___location
  pluginCreator___pluginOptions___markers___size
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___nickname
  pluginCreator___pluginOptions___openGraph___locale
  pluginCreator___pluginOptions___openGraph___site_name
  pluginCreator___pluginOptions___openGraph___type
  pluginCreator___pluginOptions___openGraph___url
  pluginCreator___pluginOptions___options___emitWarning
  pluginCreator___pluginOptions___options___failOnError
  pluginCreator___pluginOptions___overlayDrafts
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___pluginOptions___projectId
  pluginCreator___pluginOptions___scale
  pluginCreator___pluginOptions___stages
  pluginCreator___pluginOptions___stripMetadata
  pluginCreator___pluginOptions___styles
  pluginCreator___pluginOptions___stylesProvider___injectFirst
  pluginCreator___pluginOptions___styles___element
  pluginCreator___pluginOptions___styles___feature
  pluginCreator___pluginOptions___styles___rules
  pluginCreator___pluginOptions___titleTemplate
  pluginCreator___pluginOptions___useMozJpeg
  pluginCreator___pluginOptions___watchMode
  pluginCreator___pluginOptions___zoom
  pluginCreator___resolve
  pluginCreator___ssrAPIs
  pluginCreator___version
}

enum SitePluginFieldsEnum {
  browserAPIs
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  name
  nodeAPIs
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___description
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___keywords
  packageJson___license
  packageJson___main
  packageJson___name
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___version
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
  pluginFilepath
  pluginOptions___center
  pluginOptions___dataset
  pluginOptions___defaultQuality
  pluginOptions___format
  pluginOptions___implementation___info
  pluginOptions___key
  pluginOptions___markers
  pluginOptions___markers___color
  pluginOptions___markers___location
  pluginOptions___markers___size
  pluginOptions___name
  pluginOptions___nickname
  pluginOptions___openGraph___locale
  pluginOptions___openGraph___site_name
  pluginOptions___openGraph___type
  pluginOptions___openGraph___url
  pluginOptions___options___emitWarning
  pluginOptions___options___failOnError
  pluginOptions___overlayDrafts
  pluginOptions___path
  pluginOptions___pathCheck
  pluginOptions___projectId
  pluginOptions___scale
  pluginOptions___stages
  pluginOptions___stripMetadata
  pluginOptions___styles
  pluginOptions___stylesProvider___injectFirst
  pluginOptions___styles___element
  pluginOptions___styles___feature
  pluginOptions___styles___rules
  pluginOptions___styles___rules___color
  pluginOptions___styles___rules___hue
  pluginOptions___styles___rules___visibility
  pluginOptions___styles___rules___weight
  pluginOptions___titleTemplate
  pluginOptions___useMozJpeg
  pluginOptions___useResolveUrlLoader___options___sourceMap
  pluginOptions___watchMode
  pluginOptions___zoom
  resolve
  ssrAPIs
  version
}

enum SortOrderEnum {
  ASC
  DESC
}

enum StaticMapFieldsEnum {
  absolutePath
  center
  childFile___absolutePath
  childFile___accessTime
  childFile___atime
  childFile___atimeMs
  childFile___base
  childFile___birthTime
  childFile___birthtime
  childFile___birthtimeMs
  childFile___blksize
  childFile___blocks
  childFile___changeTime
  childFile___childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___resolutions___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___childImageSharp___sizes___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
  childFile___children
  childFile___children___children
  childFile___children___children___children
  childFile___children___children___id
  childFile___children___id
  childFile___children___internal___content
  childFile___children___internal___contentDigest
  childFile___children___internal___description
  childFile___children___internal___fieldOwners
  childFile___children___internal___ignoreType
  childFile___children___internal___mediaType
  childFile___children___internal___owner
  childFile___children___internal___type
  childFile___children___parent___children
  childFile___children___parent___id
  childFile___ctime
  childFile___ctimeMs
  childFile___dev
  childFile___dir
  childFile___ext
  childFile___extension
  childFile___gid
  childFile___hash
  childFile___id
  childFile___ino
  childFile___internal___content
  childFile___internal___contentDigest
  childFile___internal___description
  childFile___internal___fieldOwners
  childFile___internal___ignoreType
  childFile___internal___mediaType
  childFile___internal___owner
  childFile___internal___type
  childFile___mode
  childFile___modifiedTime
  childFile___mtime
  childFile___mtimeMs
  childFile___name
  childFile___nlink
  childFile___parent___children
  childFile___parent___children___children
  childFile___parent___children___id
  childFile___parent___id
  childFile___parent___internal___content
  childFile___parent___internal___contentDigest
  childFile___parent___internal___description
  childFile___parent___internal___fieldOwners
  childFile___parent___internal___ignoreType
  childFile___parent___internal___mediaType
  childFile___parent___internal___owner
  childFile___parent___internal___type
  childFile___parent___parent___children
  childFile___parent___parent___id
  childFile___prettySize
  childFile___publicURL
  childFile___rdev
  childFile___relativeDirectory
  childFile___relativePath
  childFile___root
  childFile___size
  childFile___sourceInstanceName
  childFile___uid
  children
  children___children
  children___children___children
  children___children___children___children
  children___children___children___id
  children___children___id
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___children___parent___children
  children___children___parent___id
  children___id
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  children___parent___children
  children___parent___children___children
  children___parent___children___id
  children___parent___id
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___parent___parent___children
  children___parent___parent___id
  hash
  id
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  mapUrl
  nickname
  parent___children
  parent___children___children
  parent___children___children___children
  parent___children___children___id
  parent___children___id
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___children___parent___children
  parent___children___parent___id
  parent___id
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  parent___parent___children
  parent___parent___children___children
  parent___parent___children___id
  parent___parent___id
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___parent___parent___children
  parent___parent___parent___id
}

input BooleanQueryOperatorInput {
  eq: Boolean
  in: [Boolean]
  ne: Boolean
  nin: [Boolean]
}

input DateQueryOperatorInput {
  eq: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  nin: [Date]
}

input DirectoryFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  opacity: Int
  shadow: String!
}

input FileFilterInput {
  absolutePath: StringQueryOperatorInput
  accessTime: DateQueryOperatorInput
  atime: DateQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  base: StringQueryOperatorInput
  birthTime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  changeTime: DateQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  ctime: DateQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  dev: IntQueryOperatorInput
  dir: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  gid: IntQueryOperatorInput
  hash: StringQueryOperatorInput
  id: StringQueryOperatorInput
  ino: FloatQueryOperatorInput
  internal: InternalFilterInput
  mode: IntQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  name: StringQueryOperatorInput
  nlink: IntQueryOperatorInput
  parent: NodeFilterInput
  prettySize: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  rdev: IntQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  root: StringQueryOperatorInput
  size: IntQueryOperatorInput
  sourceInstanceName: StringQueryOperatorInput
  uid: IntQueryOperatorInput
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  ne: Float
  nin: [Float]
}

input ImageSharpFilterInput {
  children: NodeFilterListInput
  fixed: ImageSharpFixedFilterInput
  fluid: ImageSharpFluidFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  original: ImageSharpOriginalFilterInput
  parent: NodeFilterInput
  resize: ImageSharpResizeFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  sizes: ImageSharpSizesFilterInput
}

input ImageSharpFixedFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
  aspectRatio: FloatQueryOperatorInput
  height: IntQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
}

input ImageSharpResolutionsFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input ImageSharpSizesFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
  eq: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  nin: [Int]
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input JSONQueryOperatorInput {
  eq: JSON
  glob: JSON
  in: [JSON]
  ne: JSON
  nin: [JSON]
  regex: JSON
}

input NodeFilterInput {
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

input Potrace {
  alphaMax: Float
  background: String
  blackOnWhite: Boolean
  color: String
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  turdSize: Float
  turnPolicy: PotraceTurnPolicy
}

input SanityAssetSourceDataFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SanityAuthorFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawBio: JSONQueryOperatorInput
  _rawImage: JSONQueryOperatorInput
  _rawSlug: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  bio: SanityBlockFilterListInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  image: SanityMainImageFilterInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
  slug: SanitySlugFilterInput
}

input SanityAuthorReferenceFilterInput {
  _key: StringQueryOperatorInput
  _rawAuthor: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  author: SanityAuthorFilterInput
}

input SanityAuthorReferenceFilterListInput {
  elemMatch: SanityAuthorReferenceFilterInput
}

input SanityAuthorSortInput {
  fields: [SanityAuthorFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityBlockFilterInput {
  _key: StringQueryOperatorInput
  _rawChildren: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  children: SanitySpanFilterListInput
  list: StringQueryOperatorInput
  style: StringQueryOperatorInput
}

input SanityBlockFilterListInput {
  elemMatch: SanityBlockFilterInput
}

input SanityCategoryFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  title: StringQueryOperatorInput
}

input SanityCategoryFilterListInput {
  elemMatch: SanityCategoryFilterInput
}

input SanityCategorySortInput {
  fields: [SanityCategoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityColorFilterInput {
  _key: StringQueryOperatorInput
  _rawHsl: JSONQueryOperatorInput
  _rawHsv: JSONQueryOperatorInput
  _rawRgb: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  alpha: FloatQueryOperatorInput
  hex: StringQueryOperatorInput
  hsl: SanityHslaColorFilterInput
  hsv: SanityHsvaColorFilterInput
  rgb: SanityRgbaColorFilterInput
}

input SanityCtaFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  kind: StringQueryOperatorInput
  link: StringQueryOperatorInput
  route: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SanityEventDayFilterInput {
  _key: StringQueryOperatorInput
  _rawIllustration: JSONQueryOperatorInput
  _rawTagline: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  details: StringQueryOperatorInput
  disabled: BooleanQueryOperatorInput
  heading: StringQueryOperatorInput
  illustration: SanityIllustrationFilterInput
  tagline: SanityBlockFilterListInput
}

input SanityFileAssetFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawSource: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  assetId: StringQueryOperatorInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  label: StringQueryOperatorInput
  mimeType: StringQueryOperatorInput
  originalFilename: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  sha1hash: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  source: SanityAssetSourceDataFilterInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SanityFileAssetSortInput {
  fields: [SanityFileAssetFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityGeopointFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  alt: FloatQueryOperatorInput
  lat: FloatQueryOperatorInput
  lng: FloatQueryOperatorInput
}

input SanityHeroFilterInput {
  _key: StringQueryOperatorInput
  _rawCta: JSONQueryOperatorInput
  _rawIllustration: JSONQueryOperatorInput
  _rawTagline: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  cta: SanityCtaFilterInput
  disabled: BooleanQueryOperatorInput
  heading: StringQueryOperatorInput
  illustration: SanityIllustrationFilterInput
  label: StringQueryOperatorInput
  tagline: SanityBlockFilterListInput
}

input SanityHslaColorFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  a: FloatQueryOperatorInput
  h: FloatQueryOperatorInput
  l: FloatQueryOperatorInput
  s: FloatQueryOperatorInput
}

input SanityHsvaColorFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  a: FloatQueryOperatorInput
  h: FloatQueryOperatorInput
  s: FloatQueryOperatorInput
  v: FloatQueryOperatorInput
}

input SanityIllustrationFilterInput {
  _key: StringQueryOperatorInput
  _rawImage: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  disabled: BooleanQueryOperatorInput
  image: SanityMainImageFilterInput
}

input SanityImageAssetFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawMetadata: JSONQueryOperatorInput
  _rawSource: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  assetId: StringQueryOperatorInput
  childImageSharp: ImageSharpFilterInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  fixed: SanityImageFixedFilterInput
  fluid: SanityImageFluidFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  label: StringQueryOperatorInput
  metadata: SanityImageMetadataFilterInput
  mimeType: StringQueryOperatorInput
  originalFilename: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  sha1hash: StringQueryOperatorInput
  size: FloatQueryOperatorInput
  source: SanityAssetSourceDataFilterInput
  title: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SanityImageAssetSortInput {
  fields: [SanityImageAssetFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityImageCropFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  bottom: FloatQueryOperatorInput
  left: FloatQueryOperatorInput
  right: FloatQueryOperatorInput
  top: FloatQueryOperatorInput
}

input SanityImageDimensionsFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
}

input SanityImageFilterInput {
  _key: StringQueryOperatorInput
  _rawAsset: JSONQueryOperatorInput
  _rawCrop: JSONQueryOperatorInput
  _rawHotspot: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  asset: SanityImageAssetFilterInput
  crop: SanityImageCropFilterInput
  hotspot: SanityImageHotspotFilterInput
}

input SanityImageFixedFilterInput {
  base64: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  width: FloatQueryOperatorInput
}

input SanityImageFluidFilterInput {
  aspectRatio: FloatQueryOperatorInput
  base64: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
}

input SanityImageHotspotFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  height: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  x: FloatQueryOperatorInput
  y: FloatQueryOperatorInput
}

input SanityImageMetadataFilterInput {
  _key: StringQueryOperatorInput
  _rawDimensions: JSONQueryOperatorInput
  _rawLocation: JSONQueryOperatorInput
  _rawPalette: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  dimensions: SanityImageDimensionsFilterInput
  hasAlpha: BooleanQueryOperatorInput
  isOpaque: BooleanQueryOperatorInput
  location: SanityGeopointFilterInput
  lqip: StringQueryOperatorInput
  palette: SanityImagePaletteFilterInput
}

input SanityImagePaletteFilterInput {
  _key: StringQueryOperatorInput
  _rawDarkMuted: JSONQueryOperatorInput
  _rawDarkVibrant: JSONQueryOperatorInput
  _rawDominant: JSONQueryOperatorInput
  _rawLightMuted: JSONQueryOperatorInput
  _rawLightVibrant: JSONQueryOperatorInput
  _rawMuted: JSONQueryOperatorInput
  _rawVibrant: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  darkMuted: SanityImagePaletteSwatchFilterInput
  darkVibrant: SanityImagePaletteSwatchFilterInput
  dominant: SanityImagePaletteSwatchFilterInput
  lightMuted: SanityImagePaletteSwatchFilterInput
  lightVibrant: SanityImagePaletteSwatchFilterInput
  muted: SanityImagePaletteSwatchFilterInput
  vibrant: SanityImagePaletteSwatchFilterInput
}

input SanityImagePaletteSwatchFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  background: StringQueryOperatorInput
  foreground: StringQueryOperatorInput
  population: FloatQueryOperatorInput
  title: StringQueryOperatorInput
}

input SanityMainImageFilterInput {
  _key: StringQueryOperatorInput
  _rawAsset: JSONQueryOperatorInput
  _rawCrop: JSONQueryOperatorInput
  _rawHotspot: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  alt: StringQueryOperatorInput
  asset: SanityImageAssetFilterInput
  caption: StringQueryOperatorInput
  crop: SanityImageCropFilterInput
  hotspot: SanityImageHotspotFilterInput
}

input SanityMenuItemCategoryFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  title: StringQueryOperatorInput
}

input SanityMenuItemCategoryFilterListInput {
  elemMatch: SanityMenuItemCategoryFilterInput
}

input SanityMenuItemCategorySortInput {
  fields: [SanityMenuItemCategoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityMenuItemFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawImage: JSONQueryOperatorInput
  _rawMenuItemCategory: JSONQueryOperatorInput
  _rawMenuItemPriceOption: JSONQueryOperatorInput
  _rawSlug: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  children: NodeFilterListInput
  description: StringQueryOperatorInput
  id: StringQueryOperatorInput
  image: SanityImageFilterInput
  internal: InternalFilterInput
  menuItemCategory: SanityMenuItemCategoryFilterListInput
  menuItemPriceOption: SanityMenuItemPriceOptionFilterListInput
  name: StringQueryOperatorInput
  parent: NodeFilterInput
  slug: SanitySlugFilterInput
}

input SanityMenuItemPriceOptionFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  price: FloatQueryOperatorInput
  variant: StringQueryOperatorInput
}

input SanityMenuItemPriceOptionFilterListInput {
  elemMatch: SanityMenuItemPriceOptionFilterInput
}

input SanityMenuItemSortInput {
  fields: [SanityMenuItemFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityOpenGraphFilterInput {
  _key: StringQueryOperatorInput
  _rawImage: JSONQueryOperatorInput
  _type: StringQueryOperatorInput
  description: StringQueryOperatorInput
  image: SanityMainImageFilterInput
  title: StringQueryOperatorInput
}

input SanityPageFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawHero: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  children: NodeFilterListInput
  hero: SanityHeroFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  title: StringQueryOperatorInput
}

input SanityPageSortInput {
  fields: [SanityPageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityPostFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawAuthors: JSONQueryOperatorInput
  _rawBody: JSONQueryOperatorInput
  _rawCategories: JSONQueryOperatorInput
  _rawExcerpt: JSONQueryOperatorInput
  _rawMainImage: JSONQueryOperatorInput
  _rawSlug: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  authors: SanityAuthorReferenceFilterListInput
  body: SanityBlockFilterListInput
  categories: SanityCategoryFilterListInput
  children: NodeFilterListInput
  excerpt: SanityBlockFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  isPublished: BooleanQueryOperatorInput
  mainImage: SanityMainImageFilterInput
  parent: NodeFilterInput
  publishedAt: DateQueryOperatorInput
  slug: SanitySlugFilterInput
  title: StringQueryOperatorInput
}

input SanityPostSortInput {
  fields: [SanityPostFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanityResolveReferencesConfiguration {
  "Max depth to resolve references to"
  maxDepth: Int!
}

input SanityRgbaColorFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  a: FloatQueryOperatorInput
  b: FloatQueryOperatorInput
  g: FloatQueryOperatorInput
  r: FloatQueryOperatorInput
}

input SanitySiteSettingsFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawHappyHour: JSONQueryOperatorInput
  _rawOpenGraph: JSONQueryOperatorInput
  _rawPrimaryColor: JSONQueryOperatorInput
  _rawSecondaryColor: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  address: StringQueryOperatorInput
  children: NodeFilterListInput
  facebookPage: StringQueryOperatorInput
  happyHour: SanityBlockFilterListInput
  id: StringQueryOperatorInput
  instagramPage: StringQueryOperatorInput
  internal: InternalFilterInput
  openGraph: SanityOpenGraphFilterInput
  parent: NodeFilterInput
  primaryColor: SanityColorFilterInput
  secondaryColor: SanityColorFilterInput
  twitterPage: StringQueryOperatorInput
}

input SanitySiteSettingsSortInput {
  fields: [SanitySiteSettingsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SanitySlugFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  current: StringQueryOperatorInput
}

input SanitySpanFilterInput {
  _key: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  marks: StringQueryOperatorInput
  text: StringQueryOperatorInput
}

input SanitySpanFilterListInput {
  elemMatch: SanitySpanFilterInput
}

input SanityWeeklyEventsFilterInput {
  _createdAt: DateQueryOperatorInput
  _id: StringQueryOperatorInput
  _key: StringQueryOperatorInput
  _rawFriday: JSONQueryOperatorInput
  _rawMonday: JSONQueryOperatorInput
  _rawSaturday: JSONQueryOperatorInput
  _rawSunday: JSONQueryOperatorInput
  _rawThursday: JSONQueryOperatorInput
  _rawTuesday: JSONQueryOperatorInput
  _rawWednesday: JSONQueryOperatorInput
  _rev: StringQueryOperatorInput
  _type: StringQueryOperatorInput
  _updatedAt: DateQueryOperatorInput
  children: NodeFilterListInput
  friday: SanityEventDayFilterInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  monday: SanityEventDayFilterInput
  parent: NodeFilterInput
  saturday: SanityEventDayFilterInput
  sunday: SanityEventDayFilterInput
  thursday: SanityEventDayFilterInput
  tuesday: SanityEventDayFilterInput
  wednesday: SanityEventDayFilterInput
}

input SanityWeeklyEventsSortInput {
  fields: [SanityWeeklyEventsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteBuildMetadataFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  children: NodeFilterListInput
  host: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  parent: NodeFilterInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  port: IntQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageFilterInput {
  children: NodeFilterListInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  internalComponentName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  matchPath: StringQueryOperatorInput
  parent: NodeFilterInput
  path: StringQueryOperatorInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
  browserAPIs: StringQueryOperatorInput
  children: NodeFilterListInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  name: StringQueryOperatorInput
  nodeAPIs: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
  parent: NodeFilterInput
  pluginFilepath: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  resolve: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  description: StringQueryOperatorInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  keywords: StringQueryOperatorInput
  license: StringQueryOperatorInput
  main: StringQueryOperatorInput
  name: StringQueryOperatorInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFilterInput {
  center: StringQueryOperatorInput
  dataset: StringQueryOperatorInput
  defaultQuality: IntQueryOperatorInput
  format: StringQueryOperatorInput
  implementation: SitePluginPluginOptionsImplementationFilterInput
  key: StringQueryOperatorInput
  markers: SitePluginPluginOptionsMarkersFilterListInput
  name: StringQueryOperatorInput
  nickname: StringQueryOperatorInput
  openGraph: SitePluginPluginOptionsOpenGraphFilterInput
  options: SitePluginPluginOptionsOptionsFilterInput
  overlayDrafts: BooleanQueryOperatorInput
  path: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
  projectId: StringQueryOperatorInput
  scale: IntQueryOperatorInput
  stages: StringQueryOperatorInput
  stripMetadata: BooleanQueryOperatorInput
  styles: SitePluginPluginOptionsStylesFilterListInput
  stylesProvider: SitePluginPluginOptionsStylesProviderFilterInput
  titleTemplate: StringQueryOperatorInput
  useMozJpeg: BooleanQueryOperatorInput
  useResolveUrlLoader: SitePluginPluginOptionsUseResolveUrlLoaderFilterInput
  watchMode: BooleanQueryOperatorInput
  zoom: IntQueryOperatorInput
}

input SitePluginPluginOptionsImplementationFilterInput {
  info: StringQueryOperatorInput
}

input SitePluginPluginOptionsMarkersFilterInput {
  color: StringQueryOperatorInput
  location: StringQueryOperatorInput
  size: StringQueryOperatorInput
}

input SitePluginPluginOptionsMarkersFilterListInput {
  elemMatch: SitePluginPluginOptionsMarkersFilterInput
}

input SitePluginPluginOptionsOpenGraphFilterInput {
  locale: StringQueryOperatorInput
  site_name: StringQueryOperatorInput
  type: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input SitePluginPluginOptionsOptionsFilterInput {
  emitWarning: BooleanQueryOperatorInput
  failOnError: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsStylesFilterInput {
  element: StringQueryOperatorInput
  feature: StringQueryOperatorInput
  rules: SitePluginPluginOptionsStylesRulesFilterListInput
}

input SitePluginPluginOptionsStylesFilterListInput {
  elemMatch: SitePluginPluginOptionsStylesFilterInput
}

input SitePluginPluginOptionsStylesProviderFilterInput {
  injectFirst: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsStylesRulesFilterInput {
  color: StringQueryOperatorInput
  hue: StringQueryOperatorInput
  visibility: StringQueryOperatorInput
  weight: FloatQueryOperatorInput
}

input SitePluginPluginOptionsStylesRulesFilterListInput {
  elemMatch: SitePluginPluginOptionsStylesRulesFilterInput
}

input SitePluginPluginOptionsUseResolveUrlLoaderFilterInput {
  options: SitePluginPluginOptionsUseResolveUrlLoaderOptionsFilterInput
}

input SitePluginPluginOptionsUseResolveUrlLoaderOptionsFilterInput {
  sourceMap: BooleanQueryOperatorInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
  author: StringQueryOperatorInput
  description: StringQueryOperatorInput
  title: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StaticMapFilterInput {
  absolutePath: StringQueryOperatorInput
  center: StringQueryOperatorInput
  childFile: FileFilterInput
  children: NodeFilterListInput
  hash: StringQueryOperatorInput
  id: StringQueryOperatorInput
  internal: InternalFilterInput
  mapUrl: StringQueryOperatorInput
  nickname: StringQueryOperatorInput
  parent: NodeFilterInput
}

input StaticMapSortInput {
  fields: [StaticMapFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
  eq: String
  glob: String
  in: [String]
  ne: String
  nin: [String]
  regex: String
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
